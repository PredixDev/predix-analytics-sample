<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ge.predix.analytics</groupId>
    <artifactId>postgresdb-ref-impl-data-connector</artifactId>
    <version>1.5.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.0.RELEASE</version>
    </parent>

    <properties>
        <ref_postgres_data_connector_host>localhost</ref_postgres_data_connector_host>
        <ref_postgres_data_connector_port>18888</ref_postgres_data_connector_port>
        <ref_postgres_data_connector_read_url>http://${ref_postgres_data_connector_host}:${ref_postgres_data_connector_port}/api/v1/analytics/customdata/read</ref_postgres_data_connector_read_url>
        <moco-maven-plugin.version>0.9.3</moco-maven-plugin.version>
        <maven-surefire-plugin.version>2.14.1</maven-surefire-plugin.version>
        <mock_uaa_host>localhost</mock_uaa_host>
        <mock_uaa_port>19999</mock_uaa_port>
        <mock_uaa_check_token_url>http://localhost:${mock_uaa_port}/uaa/check_token</mock_uaa_check_token_url>
        <mock_uaa_oauth_token_url>http://${mock_uaa_host}:${mock_uaa_port}/uaa/oauth/token</mock_uaa_oauth_token_url>
        <mock_uaa_client_id>abc</mock_uaa_client_id>
        <mock_uaa_client_secret>123</mock_uaa_client_secret>
        <!--configure the OAuth2 client credentials according to your environment-->
        <uaa_client_id>admin</uaa_client_id>
        <uaa_client_secret>your-client-secret</uaa_client_secret>
        <uaa_check_token_url>https://your-uaa-host/check_token</uaa_check_token_url>
    </properties>

    <profiles>
        <profile>
            <id>wadl2java</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.cxf</groupId>
                        <artifactId>cxf-wadl2java-plugin</artifactId>
                        <version>3.1.6</version>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <sourceRoot>${basedir}/src/main/java</sourceRoot>
                                    <wadlOptions>
                                        <wadlOption>
                                            <wadl>${basedir}/src/main/resources/wadl/CustomDataProviderServiceImpl.wadl</wadl>
                                            <impl>true</impl>

                                            <packagename>com.ge.predix.analytics.customconnector.refimpl.postgresdb</packagename>
                                            <schemaPackagenames>
                                                <schemaPackagename>http://postgresdbrefimpl=com.ge.predix.analytics.customconnector.refimpl.postgresdb</schemaPackagename>
                                            </schemaPackagenames>
                                        </wadlOption>

                                    </wadlOptions>

                                </configuration>
                                <goals>
                                    <goal>wadl2java</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.4.0.RELEASE</version>
                <configuration>
                    <mainClass>com.ge.predix.analytics.customconnector.refimpl.postgresdb.PostgresRefImplConnectorApplication</mainClass>
                    <jvmArguments>
                        -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5007
                        -Duaa_client_id=${uaa_client_id}
                        -Duaa_client_secret=${uaa_client_secret}
                        -Duaa_check_token_url=${uaa_check_token_url}
                    </jvmArguments>

                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                using moco to set up a mock web service that provides the uaa authorization request/response
                when the integration tests are run
            -->
            <plugin>
                <groupId>com.garrettheel</groupId>
                <artifactId>moco-maven-plugin</artifactId>
                <version>${moco-maven-plugin.version}</version>
                <configuration>
                    <port>${mock_uaa_port}</port>
                    <configFile>src/test/resources/uaa-mock.json</configFile>
                </configuration>
                <executions>
                    <execution>
                        <id>start-moco</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-moco</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/Test*.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <uaa_client_id>${mock_uaa_client_id}</uaa_client_id>
                        <uaa_client_secret>${mock_uaa_client_secret}</uaa_client_secret>
                        <uaa_check_token_url>${mock_uaa_check_token_url}</uaa_check_token_url>
                        <uaa_oauth_token_url>${mock_uaa_oauth_token_url}</uaa_oauth_token_url>
                        <ref_postgres_data_connector_port>${ref_postgres_data_connector_port}</ref_postgres_data_connector_port>
                        <ref_postgres_data_connector_read_url>${ref_postgres_data_connector_read_url}</ref_postgres_data_connector_read_url>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>


        <!-- server startup -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
            <version>3.1.7</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>1.9.2</version>
        </dependency>
        <dependency>
            <groupId>org.cloudfoundry.identity</groupId>
            <artifactId>cloudfoundry-identity-common</artifactId>
            <version>2.3.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-commons-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mariadb.jdbc</groupId>
                    <artifactId>mariadb-java-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-jwt</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework.security.oauth</groupId>
                    <artifactId>spring-security-oauth2</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework.security.oauth</groupId>
                    <artifactId>spring-security-oauth</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-expression</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jdbc</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-test</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-core</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-web</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-ldap</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework.security.extensions</groupId>
                    <artifactId>spring-security-saml2-core</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                
                 <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                
            </exclusions>


        </dependency>

        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
            <version>2.0.18.RELEASE</version>
        </dependency>
        <!-- logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
            <version>1.0.2.RELEASE</version>
        </dependency>


        <!-- DB setup and dependent libraries -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jolbox</groupId>
            <artifactId>bonecp-provider</artifactId>
            <version>0.7.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- unit and component testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cloud-connectors</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>1.3.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>


</project>
